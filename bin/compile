#!/usr/bin/env bash
set +x
set -e

BASE_DIR=`cd "$(dirname "$0")"; pwd`/..
cd "$BASE_DIR"
source config

contract=contracts/HelloWorld.sol

[ "$1" ] && contract=$1

[ -r "$contract" ] || { echo "Can't read contract \"$contract\""; exit 1; }

mkdir -p js
name=`basename "$contract" .sol`

result=`solc --optimize --combined-json abi,bin $contract 2> compile.log` || {
  echo -e "Error while compiling $1:\n"
  cat compile.log
  exit 1
}

echo "Generating js/${name}.js ..."

obj=${name,}

cat > js/${name}.js <<EOF
var ${obj}SolcOutput = ${result}

// Creates the contract object for the solidity contract. See more at:
// https://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethcontract
var ${obj}Contract = web3.eth.contract(JSON.parse(${obj}SolcOutput.contracts["contracts/${name}.sol:${name}"].abi));

// Deploy the contract
var ${obj} = ${obj}Contract.new({
    from: eth.accounts[0],
    data: "0x" + ${obj}SolcOutput.contracts["contracts/${name}.sol:${name}"].bin,
    gas: 4700000
  },
  function (e, contract) {
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
      console.log('contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
  }
);
EOF
